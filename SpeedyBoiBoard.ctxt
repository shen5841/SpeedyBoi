#BlueJ class context
comment0.target=SpeedyBoiBoard
comment0.text=\r\n\ The\ SpeedyBoiBoard\ class\ represents\ the\ board\ in\ a\ game\ of\ SpeedyBoi.\r\n
comment1.params=
comment1.target=SpeedyBoiBoard()
comment1.text=\r\n\ Creates\ a\ new\ <code>ElevensBoard</code>\ instance.\r\n
comment10.params=selectedCards
comment10.target=java.util.List\ findJQK(java.util.List)
comment10.text=\r\n\ Look\ for\ a\ JQK\ in\ the\ selected\ cards.\r\n\ @param\ selectedCards\ selects\ a\ subset\ of\ this\ board.\ \ It\ is\ list\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ of\ indexes\ into\ this\ board\ that\ are\ searched\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ find\ a\ JQK\ group.\r\n\ @return\ a\ list\ of\ the\ indexes\ of\ a\ JQK,\ if\ a\ JQK\ was\ found;\r\n\ \ \ \ \ \ \ \ \ an\ empty\ list,\ if\ a\ JQK\ was\ not\ found.\r\n
comment11.params=
comment11.target=boolean\ playPairSum11IfPossible()
comment11.text=\r\n\ Looks\ for\ a\ pair\ of\ non-face\ cards\ whose\ values\ sum\ to\ 11.\r\n\ If\ found,\ replace\ them\ with\ the\ next\ two\ cards\ in\ the\ deck.\r\n\ The\ simulation\ of\ this\ game\ uses\ this\ method.\r\n\ @return\ true\ if\ an\ 11-pair\ play\ was\ found\ (and\ made);\ false\ othewise.\r\n
comment12.params=
comment12.target=boolean\ playJQKIfPossible()
comment12.text=\r\n\ Looks\ for\ a\ group\ of\ three\ face\ cards\ JQK.\r\n\ If\ found,\ replace\ them\ with\ the\ next\ three\ cards\ in\ the\ deck.\r\n\ The\ simulation\ of\ this\ game\ uses\ this\ method.\r\n\ @return\ true\ if\ a\ JQK\ play\ was\ found\ (and\ made);\ false\ othewise.\r\n
comment2.params=selectedCards
comment2.target=boolean\ isLegal(java.util.List)
comment2.text=\r\n\ Determines\ if\ the\ selected\ cards\ form\ a\ valid\ group\ for\ removal.\r\n\ In\ Elevens,\ the\ legal\ groups\ are\ (1)\ a\ pair\ of\ non-face\ cards\r\n\ whose\ values\ add\ to\ 11,\ and\ (2)\ a\ group\ of\ three\ cards\ consisting\ of\r\n\ a\ jack,\ a\ queen,\ and\ a\ king\ in\ some\ order.\r\n\ @param\ selectedCards\ the\ list\ of\ the\ indices\ of\ the\ selected\ cards.\r\n\ @return\ true\ if\ the\ selected\ cards\ form\ a\ valid\ group\ for\ removal;\r\n\ \ \ \ \ \ \ \ \ false\ otherwise.\r\n
comment3.params=
comment3.target=boolean\ anotherPlayIsPossible()
comment3.text=\r\n\ Determine\ if\ there\ are\ any\ legal\ plays\ left\ on\ the\ board.\r\n\ In\ Elevens,\ there\ is\ a\ legal\ play\ if\ the\ board\ contains\r\n\ (1)\ a\ pair\ of\ non-face\ cards\ whose\ values\ add\ to\ 11,\ or\ (2)\ a\ group\r\n\ of\ three\ cards\ consisting\ of\ a\ jack,\ a\ queen,\ and\ a\ king\ in\ some\ order.\r\n\ @return\ true\ if\ there\ is\ a\ legal\ play\ left\ on\ the\ board;\r\n\ \ \ \ \ \ \ \ \ false\ otherwise.\r\n
comment4.params=selectedCards
comment4.target=java.util.List\ findPairSum13(java.util.List)
comment4.text=\r\n\ Look\ for\ an\ 13-pair\ in\ the\ selected\ cards.\r\n\ @param\ selectedCards\ selects\ a\ subset\ of\ this\ board.\ \ It\ is\ list\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ of\ indexes\ into\ this\ board\ that\ are\ searched\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ find\ an\ 13-pair.\r\n\ @return\ a\ list\ of\ the\ indexes\ of\ an\ 13-pair,\ if\ an\ 13-pair\ was\ found;\r\n\ \ \ \ \ \ \ \ \ an\ empty\ list,\ if\ an\ 13-pair\ was\ not\ found.\r\n
comment5.params=selectedCards
comment5.target=java.util.List\ findKing(java.util.List)
comment5.text=\r\n\ Look\ for\ a\ king\ in\ the\ selected\ cards.\r\n\ @param\ selectedCards\ selects\ a\ subset\ of\ this\ board.\ \ It\ is\ list\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ of\ indexes\ into\ this\ board\ that\ are\ searched\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ find\ a\ king.\r\n\ @return\ a\ list\ of\ the\ index\ of\ a\ king,\ if\ a\ king\ was\ found;\r\n\ \ \ \ \ \ \ \ \ an\ empty\ list,\ if\ a\ king\ was\ not\ found.\r\n
comment6.params=
comment6.target=boolean\ playIfPossible()
comment6.text=\r\n\ Looks\ for\ a\ legal\ play\ on\ the\ board.\ \ If\ one\ is\ found,\ it\ plays\ it.\r\n\ @return\ true\ if\ a\ legal\ play\ was\ found\ (and\ made);\ false\ othewise.\r\n
comment7.params=
comment7.target=boolean\ playPairSum13IfPossible()
comment7.text=\r\n\ Looks\ for\ a\ pair\ of\ non-face\ cards\ whose\ values\ sum\ to\ 13.\r\n\ If\ found,\ replace\ them\ with\ the\ next\ two\ cards\ in\ the\ deck.\r\n\ The\ simulation\ of\ this\ game\ uses\ this\ method.\r\n\ @return\ true\ if\ an\ 13-pair\ play\ was\ found\ (and\ made);\ false\ othewise.\r\n
comment8.params=
comment8.target=boolean\ playKingIfPossible()
comment8.text=\r\n\ Looks\ for\ a\ King.\r\n\ If\ found,\ replace\ it\ with\ the\ next\ card\ in\ the\ deck.\r\n\ The\ simulation\ of\ this\ game\ uses\ this\ method.\r\n\ @return\ true\ if\ a\ king\ play\ was\ found\ (and\ made);\ false\ othewise.\r\n
comment9.params=selectedCards
comment9.target=java.util.List\ findPairSum11(java.util.List)
comment9.text=\r\n\ Look\ for\ an\ 11-pair\ in\ the\ selected\ cards.\r\n\ @param\ selectedCards\ selects\ a\ subset\ of\ this\ board.\ \ It\ is\ list\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ of\ indexes\ into\ this\ board\ that\ are\ searched\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ find\ an\ 11-pair.\r\n\ @return\ a\ list\ of\ the\ indexes\ of\ an\ 11-pair,\ if\ an\ 11-pair\ was\ found;\r\n\ \ \ \ \ \ \ \ \ an\ empty\ list,\ if\ an\ 11-pair\ was\ not\ found.\r\n
numComments=13
